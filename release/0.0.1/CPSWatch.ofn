Prefix(:=<https://w3id.org/CPSWatch#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<https://w3id.org/CPSWatch>
<https://w3id.org/CPSWatch/1.0.0>
Annotation(<http://purl.org/dc/elements/1.1/description> "This ontology defines a vocabulary for describing cyber physical systems for monitoring purpose. It contains two main concepts: CPSWatch#MonitoredSystem that is a top level description of a System that is modeled and CPSWatch#MonitoringSensor that is a top level description of a sensor used to monitor the CPSWatch#MonitoredSystem. "@en)
Annotation(<http://purl.org/dc/elements/1.1/title> "The Cyber Physical System Watch Ontology"@en)
Annotation(<http://purl.org/dc/terms/abstract> "Manufacturers and users want to monitore their cyber physical systems. In the Industry 4.0 this is done by observing data from sensors. The problem arises when looking at a system of systems, e.g. a production plant or a whole powertrain of a vessel. Multiple systems describe their data in multiple ways and create the problem of analysing these data together in one system. To tackle this problem and to make transferability of algorithms (ML methods) between different monitoring systems possible, the CPSWatch Ontology is defined to create a top level description of a CPS system. "@en)
Annotation(<http://purl.org/dc/terms/created> "November 19th, 2023"@en)
Annotation(<http://purl.org/dc/terms/creator> <https://orcid.org/0009-0003-2548-8225>)
Annotation(<http://purl.org/dc/terms/issued> "November 19th, 2023"@en)
Annotation(<http://purl.org/dc/terms/license> <https://creativecommons.org/licenses/by/4.0/>)
Annotation(<http://purl.org/dc/terms/modified> "November 19th, 2023"@en)
Annotation(<http://purl.org/dc/terms/publisher> "CPSWatch on Github"@en)
Annotation(<http://purl.org/ontology/bibo/status> "CPSWatch (stable)"@en)
Annotation(<http://purl.org/vocab/vann/preferredNamespacePrefix> "CPSWatch"@en)
Annotation(<http://purl.org/vocab/vann/preferredNamespaceUri> "https://w3id.org/CPSWatch#")
Annotation(rdfs:comment "1.0.0 release of the CPSWatch Ontology"@en)
Annotation(owl:versionInfo "1.0.0"@en)
Annotation(<https://schema.org/image> <https://github.com/B-Ludwig/CPSWatch/blob/aa184a2003274995672a6dd3ca445b12a5286f52/assets/Logo.png>)
Annotation(<https://schema.org/logo> <https://github.com/B-Ludwig/CPSWatch/blob/aa184a2003274995672a6dd3ca445b12a5286f52/assets/Logo.png>)

Declaration(Class(<http://qudt.org/vocab/unit#QuantityValue>))
Declaration(Class(<http://xmlns.com/foaf/0.1/Organization>))
Declaration(Class(:ContinuousMonitoringSensor))
Declaration(Class(:CpsComponent))
Declaration(Class(:DiscreteStatus))
Declaration(Class(:EventMonitoringSensor))
Declaration(Class(:MonitoredSystem))
Declaration(Class(:MonitoringSensor))
Declaration(Class(:NumericMonitoringSensor))
Declaration(Class(:NumericObservation))
Declaration(Class(:Observation))
Declaration(Class(:StatusMonitoringSensor))
Declaration(Class(:StatusObservation))
Declaration(ObjectProperty(<http://purl.org/dc/elements/1.1/publisher>))
Declaration(ObjectProperty(<http://www.w3.org/ns/sosa/madeBySensor>))
Declaration(ObjectProperty(:hasDiscreteStatus))
Declaration(ObjectProperty(:hasInfluence))
Declaration(ObjectProperty(:hasMonitoringSensor))
Declaration(ObjectProperty(:hasNegativeCorrelation))
Declaration(ObjectProperty(:hasPositiveCorrelation))
Declaration(ObjectProperty(:hasStates))
Declaration(ObjectProperty(:hasSubSystem))
Declaration(ObjectProperty(:hasSystemConnection))
Declaration(ObjectProperty(:hasUnit))
Declaration(DataProperty(<http://www.w3.org/ns/sosa#hasSimpleResult>))
Declaration(DataProperty(<http://www.w3.org/ns/sosa#resultTime>))
Declaration(DataProperty(:hasDeviationThreshold))
Declaration(DataProperty(:hasID))
Declaration(DataProperty(:hasSampleRate))
Declaration(NamedIndividual(:Closed))
Declaration(NamedIndividual(:Critical))
Declaration(NamedIndividual(:Error))
Declaration(NamedIndividual(:OK))
Declaration(NamedIndividual(:Off))
Declaration(NamedIndividual(:On))
Declaration(NamedIndividual(:Open))
Declaration(NamedIndividual(:ShuttingDown))
Declaration(NamedIndividual(:Starting))
Declaration(NamedIndividual(<https://www.hsu-hh.de#this>))
Declaration(AnnotationProperty(<http://purl.org/dc/elements/1.1/description>))
Declaration(AnnotationProperty(<http://purl.org/dc/elements/1.1/title>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/abstract>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/created>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/creator>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/description>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/issued>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/license>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/modified>))
Declaration(AnnotationProperty(<http://purl.org/dc/terms/publisher>))
Declaration(AnnotationProperty(<http://purl.org/ontology/bibo/status>))
Declaration(AnnotationProperty(<http://purl.org/vocab/vann/preferredNamespacePrefix>))
Declaration(AnnotationProperty(<http://purl.org/vocab/vann/preferredNamespaceUri>))
Declaration(AnnotationProperty(owl:cardinality))
Declaration(AnnotationProperty(<http://www.w3.org/2008/05/skos#prefLabel>))
Declaration(AnnotationProperty(<http://www.w3.org/ns/org#memberOf>))
Declaration(AnnotationProperty(<http://xmlns.com/foaf/0.1/homepage>))
Declaration(AnnotationProperty(<http://xmlns.com/foaf/0.1/name>))
Declaration(AnnotationProperty(<https://schema.org/image>))
Declaration(AnnotationProperty(<https://schema.org/includedInDataCatalog>))
Declaration(AnnotationProperty(<https://schema.org/logo>))
############################
#   Annotation Properties
############################

# Annotation Property: <http://www.w3.org/2008/05/skos#prefLabel> (<http://www.w3.org/2008/05/skos#prefLabel>)

SubAnnotationPropertyOf(<http://www.w3.org/2008/05/skos#prefLabel> rdfs:label)


############################
#   Object Properties
############################

# Object Property: <http://purl.org/dc/elements/1.1/publisher> (publisher)

AnnotationAssertion(rdfs:comment <http://purl.org/dc/elements/1.1/publisher> "An entity responsible for making the resource available."@en)
AnnotationAssertion(rdfs:isDefinedBy <http://purl.org/dc/elements/1.1/publisher> <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label <http://purl.org/dc/elements/1.1/publisher> "publisher"@en)

# Object Property: <http://www.w3.org/ns/sosa/madeBySensor> (madeBySensor)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/sosa/madeBySensor> "Connection between a CPSWatch#Observation and a CPSWatch#MonitoringSensor. "@en)
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/sosa/madeBySensor> "madeBySensor"@en)
ObjectPropertyDomain(<http://www.w3.org/ns/sosa/madeBySensor> :Observation)
ObjectPropertyRange(<http://www.w3.org/ns/sosa/madeBySensor> :MonitoringSensor)

# Object Property: :hasDiscreteStatus (hasDiscreteStatus)

AnnotationAssertion(rdfs:comment :hasDiscreteStatus "The Status of the observations of a CPSWatch#StatusMonitoringSensor.")
AnnotationAssertion(rdfs:label :hasDiscreteStatus "hasDiscreteStatus")
AnnotationAssertion(owl:cardinality :hasDiscreteStatus "1"^^xsd:nonNegativeInteger)
ObjectPropertyDomain(:hasDiscreteStatus :StatusObservation)
ObjectPropertyRange(:hasDiscreteStatus :DiscreteStatus)

# Object Property: :hasInfluence (hasInfluence)

AnnotationAssertion(rdfs:comment :hasInfluence "Connection between two CPSWatch:MonitoringSensor to state that the observations of these sensors are connected."@en)
AnnotationAssertion(rdfs:label :hasInfluence "hasInfluence"@en)
ObjectPropertyDomain(:hasInfluence :MonitoringSensor)
ObjectPropertyRange(:hasInfluence :MonitoringSensor)

# Object Property: :hasMonitoringSensor (hasMonitoringSensor)

AnnotationAssertion(rdfs:comment :hasMonitoringSensor "Connection from a CPSWatch:MonitoredSystem to a CPSWatch#MonitoringSensor"@en)
AnnotationAssertion(rdfs:label :hasMonitoringSensor "hasMonitoringSensor"@en)
ObjectPropertyDomain(:hasMonitoringSensor :MonitoredSystem)
ObjectPropertyRange(:hasMonitoringSensor :MonitoringSensor)

# Object Property: :hasNegativeCorrelation (hasNegativeCorrelation)

AnnotationAssertion(rdfs:comment :hasNegativeCorrelation "Connection between two CPSWatch:MonitoringSensor to state that the observations of these sensors are with a negative correlation."@en)
AnnotationAssertion(rdfs:label :hasNegativeCorrelation "hasNegativeCorrelation"@en)
SubObjectPropertyOf(:hasNegativeCorrelation :hasInfluence)
ObjectPropertyDomain(:hasNegativeCorrelation :MonitoringSensor)
ObjectPropertyRange(:hasNegativeCorrelation :MonitoringSensor)

# Object Property: :hasPositiveCorrelation (hasPositiveCorrelation)

AnnotationAssertion(rdfs:comment :hasPositiveCorrelation "Connection between two CPSWatch:MonitoringSensor to state that the observations of these sensors are with a positive correlation."@en)
AnnotationAssertion(rdfs:label :hasPositiveCorrelation "hasPositiveCorrelation"@en)
SubObjectPropertyOf(:hasPositiveCorrelation :hasInfluence)
ObjectPropertyDomain(:hasPositiveCorrelation :MonitoringSensor)
ObjectPropertyRange(:hasPositiveCorrelation :MonitoringSensor)

# Object Property: :hasStates (hasStates)

AnnotationAssertion(rdfs:comment :hasStates "The possible states that a CPSWatch#StatusMonitoringSensor can have.")
AnnotationAssertion(rdfs:label :hasStates "hasStates")
ObjectPropertyDomain(:hasStates :StatusMonitoringSensor)
ObjectPropertyRange(:hasStates :DiscreteStatus)

# Object Property: :hasSubSystem (hasSubSystem)

AnnotationAssertion(rdfs:comment :hasSubSystem "Connection between two CPSWatch:MonitoredSystem to state that a CPSWatch:MonitoredSystem has a sub system."@en)
AnnotationAssertion(rdfs:label :hasSubSystem "hasSubSystem"@en)
ObjectPropertyDomain(:hasSubSystem :MonitoredSystem)
ObjectPropertyRange(:hasSubSystem :MonitoredSystem)

# Object Property: :hasSystemConnection (hasSystemConnection)

AnnotationAssertion(rdfs:comment :hasSystemConnection "Connection between two CPSWatch:MonitoredSystem to state that system B is dependent on system A, e.g. CPSWatch:MonitoredSystem A hasSystemConnection CPSWatch:MonitoredSystem B."@en)
AnnotationAssertion(rdfs:label :hasSystemConnection "hasSystemConnection"@en)
SubObjectPropertyOf(:hasSystemConnection :hasSystemConnection)
ObjectPropertyDomain(:hasSystemConnection :MonitoredSystem)
ObjectPropertyRange(:hasSystemConnection :MonitoredSystem)

# Object Property: :hasUnit (hasUnit)

AnnotationAssertion(rdfs:comment :hasUnit "The unit the observations of a CPSWatch#ContinuousMonitoringSensor or CPSWatch#EventMonitoringSensor monitoring sensor are made in.")
AnnotationAssertion(rdfs:label :hasUnit "hasUnit")
AnnotationAssertion(owl:cardinality :hasUnit "1"^^xsd:nonNegativeInteger)
ObjectPropertyDomain(:hasUnit :NumericMonitoringSensor)
ObjectPropertyRange(:hasUnit <http://qudt.org/vocab/unit#QuantityValue>)


############################
#   Data Properties
############################

# Data Property: <http://www.w3.org/ns/sosa#hasSimpleResult> (hasSimpleResult)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/sosa#hasSimpleResult> "The value of the observations of a CPSWatch#ContinuousMonitoringSensor or CPSWatch#EventMonitoringSensor monitoring sensor are made in.")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/sosa#hasSimpleResult> "hasSimpleResult")
AnnotationAssertion(owl:cardinality <http://www.w3.org/ns/sosa#hasSimpleResult> "1"^^xsd:nonNegativeInteger)
DataPropertyDomain(<http://www.w3.org/ns/sosa#hasSimpleResult> :NumericObservation)

# Data Property: <http://www.w3.org/ns/sosa#resultTime> (resultTime)

AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/sosa#resultTime> "The dateTime of the observations of a CPSWatch#ContinuousMonitoringSensor or CPSWatch#EventMonitoringSensor monitoring sensor.")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/sosa#resultTime> "resultTime")
AnnotationAssertion(owl:cardinality <http://www.w3.org/ns/sosa#resultTime> "1"^^xsd:nonNegativeInteger)
DataPropertyDomain(<http://www.w3.org/ns/sosa#resultTime> :Observation)

# Data Property: :hasDeviationThreshold (hasDeviationThreshold)

AnnotationAssertion(rdfs:comment :hasDeviationThreshold "Deviation threshold of a CPSWatch:EventMonitoringSensor that needs to be exceeded to save the current value.")
AnnotationAssertion(rdfs:label :hasDeviationThreshold "hasDeviationThreshold")
AnnotationAssertion(owl:cardinality :hasDeviationThreshold "1"^^xsd:nonNegativeInteger)
DataPropertyDomain(:hasDeviationThreshold :EventMonitoringSensor)
DataPropertyRange(:hasDeviationThreshold xsd:float)

# Data Property: :hasID (hasID)

AnnotationAssertion(rdfs:comment :hasID "The unique ID of a CPSWatch#MonitoredSystem or CPSWatch#MonitoringSensor."@en)
AnnotationAssertion(rdfs:label :hasID "hasID"@en)
DataPropertyDomain(:hasID :CpsComponent)
DataPropertyRange(:hasID xsd:unsignedInt)

# Data Property: :hasSampleRate (hasSampleRate)

AnnotationAssertion(rdfs:comment :hasSampleRate "Update rate in seconds (s) that the data is stored.")
AnnotationAssertion(rdfs:label :hasSampleRate "hasSampleRate")
AnnotationAssertion(owl:cardinality :hasSampleRate "1"^^xsd:nonNegativeInteger)
DataPropertyDomain(:hasSampleRate :ContinuousMonitoringSensor)
DataPropertyRange(:hasSampleRate xsd:float)



############################
#   Classes
############################

# Class: :ContinuousMonitoringSensor (ContinuousMonitoringSensor)

AnnotationAssertion(rdfs:label :ContinuousMonitoringSensor "ContinuousMonitoringSensor")
SubClassOf(:ContinuousMonitoringSensor :NumericMonitoringSensor)

# Class: :CpsComponent (CpsComponent)

AnnotationAssertion(rdfs:comment :CpsComponent "A CPSWatch#CpsComponent component of a cyber phyisical system.")
AnnotationAssertion(rdfs:label :CpsComponent "CpsComponent")
SubClassOf(:CpsComponent DataExactCardinality(1 :hasID))

# Class: :DiscreteStatus (:DiscreteStatus)

EquivalentClasses(:DiscreteStatus ObjectOneOf(:Closed :Critical :Error :OK :Off :On :Open :ShuttingDown :Starting))

# Class: :EventMonitoringSensor (EventMonitoringSensor)

AnnotationAssertion(rdfs:label :EventMonitoringSensor "EventMonitoringSensor")
SubClassOf(:EventMonitoringSensor :NumericMonitoringSensor)

# Class: :MonitoredSystem (MonitoredSystem)

AnnotationAssertion(rdfs:comment :MonitoredSystem "A CPSWatch#MonitoredSystem is a system that is monitored by CPSWatch#MonitoringSensor.")
AnnotationAssertion(rdfs:label :MonitoredSystem "MonitoredSystem")
SubClassOf(:MonitoredSystem :CpsComponent)

# Class: :MonitoringSensor (MonitoringSensor)

AnnotationAssertion(rdfs:comment :MonitoringSensor "A CPSWatch#MonitoringSensor is a sensor used to monitor a CPSWatch#MonitoredSystem. It can be of type CPSWatch#ContinuousMonitoringSensor, CPSWatch#EventMonitoringSensor, CPSWatch#StatusMonitoringSensor.")
AnnotationAssertion(rdfs:label :MonitoringSensor "MonitoringSensor")
SubClassOf(:MonitoringSensor :CpsComponent)

# Class: :NumericMonitoringSensor (NumericMonitoringSensor)

AnnotationAssertion(rdfs:label :NumericMonitoringSensor "NumericMonitoringSensor")
SubClassOf(:NumericMonitoringSensor :MonitoringSensor)

# Class: :NumericObservation (NumericObservation )

AnnotationAssertion(rdfs:comment :NumericObservation "A CPSWatch#NumericObservation is an observation made by an CPSWatch#NumericMonitoringSensor.")
AnnotationAssertion(rdfs:label :NumericObservation "NumericObservation ")
SubClassOf(:NumericObservation :Observation)

# Class: :Observation (Observation)

AnnotationAssertion(rdfs:comment :Observation "A CPSWatch#Observation is the parent class of CPSWatch#NumericObservation and CPSWatch#StatusObservation that describe the observation made by a CPSWatch#ContinuousMonitoringSensor, CPSWatch#EventMonitoringSensor, or CPSWatch#StatusMonitoringSensor.")
AnnotationAssertion(rdfs:label :Observation "Observation")
SubClassOf(:Observation ObjectExactCardinality(1 <http://www.w3.org/ns/sosa/madeBySensor> :MonitoringSensor))

# Class: :StatusMonitoringSensor (StatusMonitoringSensor)

AnnotationAssertion(rdfs:label :StatusMonitoringSensor "StatusMonitoringSensor")
SubClassOf(:StatusMonitoringSensor :MonitoringSensor)

# Class: :StatusObservation (StatusObservation )

AnnotationAssertion(rdfs:comment :StatusObservation "A CPSWatch#StatusObservation is an observation made by an CPSWatch#StatusMonitoringSensor monitoring sensor.")
AnnotationAssertion(rdfs:label :StatusObservation "StatusObservation ")
SubClassOf(:StatusObservation :Observation)


############################
#   Named Individuals
############################

# Individual: :Closed (:Closed)

ClassAssertion(:DiscreteStatus :Closed)

# Individual: :Critical (:Critical)

ClassAssertion(:DiscreteStatus :Critical)

# Individual: :Error (:Error)

ClassAssertion(:DiscreteStatus :Error)

# Individual: :OK (:OK)

ClassAssertion(:DiscreteStatus :OK)

# Individual: :Off (:Off)

ClassAssertion(:DiscreteStatus :Off)

# Individual: :On (:On)

ClassAssertion(:DiscreteStatus :On)

# Individual: :Open (:Open)

ClassAssertion(:DiscreteStatus :Open)

# Individual: :ShuttingDown (:ShuttingDown)

ClassAssertion(:DiscreteStatus :ShuttingDown)

# Individual: :Starting (:Starting)

ClassAssertion(:DiscreteStatus :Starting)

# Individual: <https://www.hsu-hh.de#this> (<https://www.hsu-hh.de#this>)

AnnotationAssertion(<http://xmlns.com/foaf/0.1/homepage> <https://www.hsu-hh.de#this> "https://www.hsu-hh.de/en/")
AnnotationAssertion(<http://xmlns.com/foaf/0.1/name> <https://www.hsu-hh.de#this> "Helmut Schmidt University")
ClassAssertion(<http://xmlns.com/foaf/0.1/Organization> <https://www.hsu-hh.de#this>)


AnnotationAssertion(<http://www.w3.org/ns/org#memberOf> <https://orcid.org/0009-0003-2548-8225> <https://www.hsu-hh.de#this>)
AnnotationAssertion(<http://xmlns.com/foaf/0.1/name> <https://orcid.org/0009-0003-2548-8225> "Björn Ludwig"@en)
)